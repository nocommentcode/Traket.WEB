#pragma checksum "C:\Users\Malo Hamon\source\repos\Spendings.WEB\Spendings.WEB\Views\History\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "36103e7b33d1fcc20932a0c76fc89a1202cdc3bc"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_History_Index), @"mvc.1.0.view", @"/Views/History/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Malo Hamon\source\repos\Spendings.WEB\Spendings.WEB\Views\_ViewImports.cshtml"
using Spendings.WEB;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Malo Hamon\source\repos\Spendings.WEB\Spendings.WEB\Views\_ViewImports.cshtml"
using Spendings.WEB.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Malo Hamon\source\repos\Spendings.WEB\Spendings.WEB\Views\History\Index.cshtml"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"36103e7b33d1fcc20932a0c76fc89a1202cdc3bc", @"/Views/History/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2ac500cc65326589653e5231efbfd220bff142d5", @"/Views/_ViewImports.cshtml")]
    public class Views_History_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Spendings.WEB.Models.HistoryVm>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "C:\Users\Malo Hamon\source\repos\Spendings.WEB\Spendings.WEB\Views\History\Index.cshtml"
  
    if(Model.Months.Count == 0)
    {
        return;
    }
    ViewData["Title"] = "History";

    var labels = new List<string>();
    var expenses = new List<decimal>();
    var income = new List<decimal>();
    var bills = new List<decimal>();

    foreach(var month in Model.Months)
    {
        labels.Add($"{month.Month}/{month.Year}");
        expenses.Add(month.TotalExpenses);
        income.Add(month.TotalIncome);
        bills.Add(month.TotalBills);
    }

    var labelsJson = JsonConvert.SerializeObject(labels);
    var expensesJson = JsonConvert.SerializeObject(expenses);
    var incomeJson = JsonConvert.SerializeObject(income);
    var billsJson = JsonConvert.SerializeObject(bills);


#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""row"">
    <div class=""col-12 col-lg-6"">
        <div class=""card"">
            <div class=""card-header"">
                <h5 class=""card-title"">History</h5>
            </div>
            <div class=""card-body"">
                <div class=""chart"">
                    <canvas id=""chartjs-bar""></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>

        $(document).ready(function () {
            $('#history-tab').addClass(""active"");
        });

        $(function () {
            // Bar chart
            new Chart(document.getElementById(""chartjs-bar""), {
                type: ""bar"",
                data: {
                    labels: JSON.parse('");
#nullable restore
#line 57 "C:\Users\Malo Hamon\source\repos\Spendings.WEB\Spendings.WEB\Views\History\Index.cshtml"
                                   Write(Html.Raw(labelsJson));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"'),
                    datasets: [{
                        label: ""Expenses"",
                        backgroundColor: window.theme.primary,
                        borderColor: window.theme.primary,
                        hoverBackgroundColor: window.theme.primary,
                        hoverBorderColor: window.theme.primary,
                        data: JSON.parse('");
#nullable restore
#line 64 "C:\Users\Malo Hamon\source\repos\Spendings.WEB\Spendings.WEB\Views\History\Index.cshtml"
                                     Write(Html.Raw(expensesJson));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"'),
                        barPercentage: .75,
                        categoryPercentage: .5,
                        stack:1
                    },
                        {
                        label: ""Bills"",
                        backgroundColor: ""#ab0728"",
                        borderColor: ""#ab0728"",
                        hoverBackgroundColor: ""#ab0728"",
                        hoverBorderColor: ""#ab0728"",
                        data: JSON.parse('");
#nullable restore
#line 75 "C:\Users\Malo Hamon\source\repos\Spendings.WEB\Spendings.WEB\Views\History\Index.cshtml"
                                     Write(Html.Raw(billsJson));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"'),
                        barPercentage: .75,
                        categoryPercentage: .5,
                        stack:1
                    }, {
                        label: ""Income"",
                        backgroundColor: ""#dee2e6"",
                        borderColor: ""#dee2e6"",
                        hoverBackgroundColor: ""#dee2e6"",
                        hoverBorderColor: ""#dee2e6"",
                        data: JSON.parse('");
#nullable restore
#line 85 "C:\Users\Malo Hamon\source\repos\Spendings.WEB\Spendings.WEB\Views\History\Index.cshtml"
                                     Write(Html.Raw(incomeJson));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"'),
                        barPercentage: .75,
                            categoryPercentage: .5,
                        stack:2
                    }]
                },
                options: {
                    maintainAspectRatio: false,
                    legend: {
                        display: false
                    },
                    scales: {
                        yAxes: [{
                            gridLines: {
                                display: false
                            },
                            stacked: true,
                            ticks: {
                                stepSize: 20
                            }
                        }],
                        xAxes: [{
                            stacked: true,
                            gridLines: {
                                color: ""transparent""
                            }
                        }]
                    }
                }
            });
   ");
                WriteLiteral("     });\r\n    </script>\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Spendings.WEB.Models.HistoryVm> Html { get; private set; }
    }
}
#pragma warning restore 1591
