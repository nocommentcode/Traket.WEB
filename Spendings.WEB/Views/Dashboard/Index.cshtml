@model Spendings.WEB.Controllers.DashboardVm
@{
    ViewData["Title"] = "Dashbaord";

    string getPercentageClass(decimal percentage)
    {
        if (percentage > 0)
        {
            return "text-danger";
        }
        else
        {
            return "text-success";
        }
    }
}

<div class="row">
    <div class="col-xl-6 col-xxl-5 d-flex">
        <div class="w-100">
            <div class="row">
                <div class="col-sm-6">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title mb-4">Spending Today</h5>
                            <h1 class="display-5 mt-1 mb-3">$ @decimal.Round(Model.QuickInfo.SpendingsToday, 2)</h1>
                            <div class="mb-1">
                                <span class="@getPercentageClass(Model.QuickInfo.SpendingsTodayVsLastWeek)"> <i class="mdi mdi-arrow-bottom-right"></i>@(Model.QuickInfo.SpendingsTodayVsLastWeek > 0? "+":"") @decimal.Round(Model.QuickInfo.SpendingsTodayVsLastWeek, 2)% </span>
                                <span class="text-muted">Vs last week</span>
                            </div>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title mb-4">Spending WTD</h5>
                            <h1 class="display-5 mt-1 mb-3">$ @decimal.Round(Model.QuickInfo.SpendingsWTD, 2)</h1>
                            <div class="mb-1">
                                <span class="@getPercentageClass(Model.QuickInfo.SpendingsWTDVsLastWeek)"> <i class="mdi mdi-arrow-bottom-right"></i>@(Model.QuickInfo.SpendingsWTDVsLastWeek > 0? "+":"") @decimal.Round(Model.QuickInfo.SpendingsWTDVsLastWeek, 2)%  </span>
                                <span class="text-muted">Vs previous week</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title mb-4">Spending MTD</h5>
                            <h1 class="display-5 mt-1 mb-3">$ @decimal.Round(Model.QuickInfo.SpendingsMTD, 2)</h1>
                            <div class="mb-1">
                                <span class="@getPercentageClass(Model.QuickInfo.SpendingsMTDVsLastMonth)"> <i class="mdi mdi-arrow-bottom-right"></i> @(Model.QuickInfo.SpendingsMTDVsLastMonth > 0? "+":"") @decimal.Round(Model.QuickInfo.SpendingsMTDVsLastMonth, 2)% </span>
                                <span class="text-muted">Vs previous Month</span>
                            </div>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title mb-4">Predicted Spendings</h5>
                            <h1 class="display-5 mt-1 mb-3" id="predicted-spendings">$ 0</h1>
                            <!--<div class="mb-1">
                                <span class="text-danger"> <i class="mdi mdi-arrow-bottom-right"></i> -2.25% </span>
                                <span class="text-muted">Vs previous month</span>
                            </div>-->
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-6 col-xxl-7">
        <div class="card flex-fill w-100" id="graph-card">
            <div class="card-header">

                <h5 class="card-title mb-0">Monthly Movement</h5>
            </div>
            <div class="card-body py-3">
                <div class="chart chart-sm">
                    <canvas id="chartjs-dashboard-line"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>

        $(document).ready(function () {
            $('#dashboard-tab').addClass("active");
        });


        $(function () {
            var ctx = document.getElementById('chartjs-dashboard-line').getContext("2d");
            var gradient = ctx.createLinearGradient(0, 0, 0, 225);
            gradient.addColorStop(0, 'rgba(215, 227, 244, 1)');
            gradient.addColorStop(1, 'rgba(215, 227, 244, 0)');

            $.get("/get-expense-graph", function (result) {
                //set predicted spending
                var prediction = parseFloat(result.predicted[result.predicted.length - 1]).toFixed(2);
                if (!isNaN(prediction)) {
                    $('#predicted-spendings').text('$' + prediction);
                }

                if (result.predicted.length != 0 && result.actual.length != 0) {

                    new Chart(document.getElementById("chartjs-dashboard-line"), {
                        type: 'line',
                        data: {
                            labels: result.days,
                            datasets: [{
                                label: "Spending ($)",
                                fill: true,
                                backgroundColor: gradient,
                                borderColor: window.theme.primary,
                                data: result.actual
                            },
                            {
                                label: "Predicted ($)",
                                fill: false,
                                backgroundColor: "transparent",
                                borderColor: "#adb5bd",
                                borderDash: [4, 4],
                                data: result.predicted
                            }]
                        },
                        options: {
                            maintainAspectRatio: false,
                            legend: {
                                display: false
                            },
                            tooltips: {
                                intersect: false
                            },
                            hover: {
                                intersect: true
                            },
                            plugins: {
                                filler: {
                                    propagate: false
                                }
                            },
                            scales: {
                                xAxes: [{
                                    reverse: true,
                                    gridLines: {
                                        color: "rgba(0,0,0,0.0)"
                                    }
                                }],
                                yAxes: [{
                                    ticks: {
                                        stepSize: 1000
                                    },
                                    display: true,
                                    borderDash: [3, 3],
                                    gridLines: {
                                        color: "rgba(0,0,0,0.0)"
                                    }
                                }]
                            }
                        }
                    });
                } else {
                    $('#graph-card').hide();
                }
            });

        });
    </script>
}
