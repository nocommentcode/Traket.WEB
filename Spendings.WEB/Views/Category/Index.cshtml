@model List<Spendings.WEB.Services.Category>
@using Newtonsoft.Json

@{
    ViewData["Title"] = "Categories";

    var categoryList = Model.OrderBy(x => x.Total).Select(x => x.Name).ToList();
    var AmountList = Model.OrderBy(x => x.Total).Select(x => x.Total).ToList();
    var categoriesJson = JsonConvert.SerializeObject(categoryList);
    var AmountsJson = JsonConvert.SerializeObject(AmountList);
}

<div class="row">

    <div class="col-12 col-xl-6">
        <div class="card">
            <div class="card-header">
                <h1 class="h3 mb-3">Categories</h1>

                <table>
                    <tbody>
                        <tr>
                            <td>
                                <button type="button" class="btn btn-primary" id="monthly-category-btn">Monthly</button>
                            </td>
                            <td>
                                <button type="button" class="btn btn-primary" id="yearly-category-btn">Yearly</button>
                            </td> 
                            <td>
                                <button type="button" class="btn btn-primary" id="all-time-category-btn">All Time</button>
                            </td>
                            <td>
                                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#category-create-modal">Create</button>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>


            <div id="category-error-message" class="alert alert-danger alert-dismissible" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <div class="alert-message" id="category-error-message-field">
                </div>
            </div>
            <table id="category-table" class="table table-bordered">
                <thead>
                    <tr>
                        <th style="width:40%;">Name</th>
                        <th style="width:25%">Total Amount</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var category in Model)
                    {
                        <tr id="category-@category.Id">
                            <td>@category.Name</td>
                            <td>$@decimal.Round(category.Total, 2)</td>
                            <td class="table-action">
                                <a onclick="openEditCatModal('@category.Id', '@category.Name')"><i class="align-middle" data-feather="edit-2"></i></a>
                                <a onClick="deleteCategory('@category.Id')"><i class="align-middle" data-feather="trash"></i></a>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>
    </div>

    <div class="col-12 col-lg-6">
        <div class="card" id="graph-card">
            <div class="card-header">
                <h1 class="h3 mb-3">Category Breakdown</h1>
            </div>
            <div class="card-body">
                <div class="chart chart-lg">
                    <canvas id="chartjs-pie"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="category-edit-modal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Category</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body m-3">
                <form>
                    <div class="form-group">
                        <label class="form-label">Name</label>
                        <input id="modal-category-edit-name" class="form-control">
                        <input id="modal-category-edit-id" class="form-control" type="hidden">

                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button id="modal-edit-save-changes" type="button" class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="category-create-modal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create Category</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body m-3">
                <form>
                    <div class="form-group">
                        <label class="form-label">Name</label>
                        <input id="modal-category-create-name" class="form-control">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button id="modal-create-save-changes" type="button" class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
</div>
@section scripts {
    <script>
        $(document).ready(function () {
            $('#category-tab').addClass("active");

            $('#category-error-message-field').hide();

            var categories = JSON.parse('@Html.Raw(categoriesJson)');
            var amounts = JSON.parse('@Html.Raw(AmountsJson)');

            console.log(categories);
            console.log(amounts);
            if (amounts.length != 0 && categories.length != 0) {
                $(function () {
                    // Pie chart
                    new Chart(document.getElementById("chartjs-pie"), {
                        type: "pie",
                        data: {
                            labels: categories,
                            datasets: [{
                                data: amounts,
                                backgroundColor: palette('tol', amounts.length).map(function (hex) {
                                    return '#' + hex;
                                }),
                                borderColor: "transparent"
                            }]
                        },
                        options: {
                            maintainAspectRatio: false,
                            legend: {
                                display: true
                            }
                        }
                    });
                });
            } else {
                $('#graph-card').hide();
            }
        });

        $('#yearly-category-btn').click(function () {
            var d = new Date();
            d.setMonth(0);
            d.setDate(1);
            d.setHours(0);
            d.setMinutes(0);
            d.setSeconds(0);
            d.setMilliseconds(0);

            window.location.href = '/Category?startDate=' + d.toISOString();
        });

        $('#all-time-category-btn').click(function () {
            var d = new Date();
            d.setFullYear(1);
            d.setMonth(0);
            d.setDate(1);
            d.setHours(0);
            d.setMinutes(0);
            d.setSeconds(0);
            d.setMilliseconds(0);

            window.location.href = '/Category?startDate=' + d.toISOString();
        });

        $('#monthly-category-btn').click(function () {
            var d = new Date();

            d.setDate(1);
            d.setHours(0);
            d.setMinutes(0);
            d.setSeconds(0);
            d.setMilliseconds(0);
            window.location.href = '/Category?startDate=' + d.toISOString();
        });


        $('#modal-edit-save-changes').click(function () {
            var name = $('#modal-category-edit-name').val();
            var id = $('#modal-category-edit-id').val();

            var category = {
                name: name,
                id: id
            };

            $.post("/update-category-ajax", category, function (result) {
                if (result.isSuccessStatusCode) {
                    var childeren = $("#category-" + id).children();
                    childeren[0].innerHTML = name;
                }
                else {
                    console.log(result);
                    displayError("Could not update Category " + id + " because an error occured ( " + result.reasonPhrase + " )");
                }
            });

            $('#category-edit-modal').modal('hide');

        });

        $('#modal-create-save-changes').click(function () {
                var name = $('#modal-category-create-name').val();

                var category = {
                    name: name
                };

                $.post("/create-category-ajax", category, function (result) {
                    if (result.isSuccessStatusCode) {
                        //$('#category-table tr:last').after("<tr id=\"category-" + result.content.Id +"\"><td>" + result.content.Name + "</td><td>$0.00</td><td class=\"table-action\"><a onclick=\"openEditCatModal('" + result.content.Id + "', '" + result.content.Name + "')\"><i class=\"align-middle\" data-feather=\"edit-2\"></i></a><a onClick=\"deleteCategory('" + result.content.Id+"')\"><i class=\"align-middle\" data-feather=\"trash\"></i></a></td></tr>");
                        $('#category-create-modal').modal('hide');
                        location.reload();
                    }
                    else {
                        displayError("Could not create Category " + id + " because an error occured ( " + result.reasonPhrase + " )");
                    }
                });
            });


        function openEditCatModal(id, name) {
            $('#modal-category-edit-name').val(name);
            $('#modal-category-edit-id').val(id);
            $('#category-edit-modal').modal('show');

        }

        function deleteCategory(id) {
            $.post("/delete-category-ajax?id=" + id, function (result) {
                console.log(result);
                if (result.isSuccessStatusCode) {
                    $("#category-" + id).remove();
                }
                else {
                    displayError("Could not delete Category " + id + " because an error occured ( " + result.reasonPhrase + " )");
                }
            });
        }

        function displayError(message) {
            $('#category-error-message-field').innerHTML = message;
            $('#category-error-message-field').text(message);
            $('#category-error-message-field').show();
        }

    </script>
}
