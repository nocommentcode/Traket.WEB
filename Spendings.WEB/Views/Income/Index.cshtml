@model List<Spendings.WEB.Models.Income>
@{
    ViewData["Title"] = "Income";
}

<div class="row">

    <div class="col-12 col-xl-6">
        <div class="card">
            <div class="card-header">
                <h1 class="h3 mb-3">Income</h1>
               
                <table>
                    <tbody>
                        <tr>
                            <td>
                                <button type="button" class="btn btn-primary" id="monthly-income-btn" >Monthly</button>
                            </td>
                            <td>
                                <button type="button" class="btn btn-primary" id="yearly-income-btn">Yearly</button>
                            </td>
                            <td>
                                <button type="button" class="btn btn-primary" data-toggle="modal" id="create-income-btn" data-target="#income-create-modal">Create </button>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>


            <div id="income-error-message" class="alert alert-danger alert-dismissible" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <div class="alert-message" id="income-error-message-field">
                </div>
            </div>
            <table id="income-table" class="table table-bordered">
                <thead>
                    <tr>
                        <th style="width:30%;">Date</th>
                        <th style="width:30%">Amount</th>
                        <th style="width:30%">Employer</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var income in Model)
                    {
                        <tr id="income-@income.Id">
                            <td>@income.DateReceived.ToString("dd-MM-yy")</td>
                            <td>$@decimal.Round(income.Amount,2)</td>
                            <td>@income.Employer</td>
                            <td class="table-action">
                                <a onclick="openEditIncomeModal('@income.Id', '@decimal.Round(income.Amount,2)', '@income.DateReceived.ToString("yyyy-MM-ddTHH:mm")', '@income.Employer')"><i class="align-middle" data-feather="edit-2"></i></a>
                                <a onClick="deleteIncome('@income.Id')"><i class="align-middle" data-feather="trash"></i></a>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>
    </div>
</div>

<div class="modal fade" id="income-edit-modal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Income</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body m-3">
                <form>
                    <input id="modal-income-edit-id" type="hidden">
                    <div class="form-group">
                        <label class="form-label">Date</label>
                        <input id="modal-income-edit-date" class="form-control" type="datetime-local">
                    </div>

                    <div class="form-group">
                        <label class="form-label">Amount</label>
                        <input id="modal-income-edit-amount" class="form-control" type="number">
                    </div>

                    <div class="form-group">
                        <label class="form-label">Employer</label>
                        <input id="modal-income-edit-employer" class="form-control" type="text">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button id="modal-edit-save-changes" type="button" class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="income-create-modal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create Income</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body m-3">
                <form>
                    <div class="form-group">
                        <label class="form-label">Date</label>
                        <input id="modal-income-create-date" class="form-control" type="datetime-local">
                    </div>

                    <div class="form-group">
                        <label class="form-label">Amount</label>
                        <input id="modal-income-create-amount" class="form-control" type="number">
                    </div>

                    <div class="form-group">
                        <label class="form-label">Employer</label>
                        <input id="modal-income-create-employer" class="form-control" type="text">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button id="modal-create-save-changes" type="button" class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(document).ready(function () {
            $('#income-tab').addClass("active");

            $('#income-error-message-field').hide();

        });

        $('#yearly-income-btn').click(function () {
            var d = new Date();
            d.setMonth(0);
            d.setDate(1);
            d.setHours(0);
            d.setMinutes(0);
            d.setSeconds(0);
            d.setMilliseconds(0);

            window.location.href = '/Income?startDate=' + d.toISOString();
        });

        $('#monthly-income-btn').click(function () {
            var d = new Date();
            d.setDate(1);
            d.setHours(0);
            d.setMinutes(0);
            d.setSeconds(0);
            d.setMilliseconds(0);

            window.location.href = '/Income?startDate=' + d.toISOString();
        });

        $('#modal-edit-save-changes').click(function () {

            var employer = $('#modal-income-edit-employer').val();
            var amount = $('#modal-income-edit-amount').val();
            var date = new Date($('#modal-income-edit-date').val());
            var id = $('#modal-income-edit-id').val();

            var income = {
                employer: employer,
                id: id,
                amount: amount,
                dateReceived: date.toISOString()
            };

            console.log(income);

            $.post("/update-income-ajax", income, function (result) {
                if (result.isSuccessStatusCode) {
                    var childeren = $("#income-" + id).children();
                    var day = ("0" + date.getDate()).slice(-2);
                    var month = ("0" + (date.getMonth() + 1)).slice(-2);
                    childeren[0].innerHTML = day + '-' + month + '-' + date.getFullYear().toString().substring(2);
                    childeren[1].innerHTML = '$' + amount.toString();
                    childeren[2].innerHTML = employer;
                }
                else {
                    console.log(result);
                    displayError("Could not update Income " + id + " because an error occured ( " + result.reasonPhrase + " )");
                }
            });

            $('#income-edit-modal').modal('hide');

        });

        $('#create-income-btn').click(function () {

            var date = new Date();
            var day = ("0" + date.getDate()).slice(-2);
            var month = ("0" + (date.getMonth() + 1)).slice(-2);
            var hour = ("0" + (date.getHours())).slice(-2);
            var minute = ("0" + (date.getMinutes())).slice(-2);
            var dateString = date.getFullYear() + "-" + month + "-" + day + "T" + hour + ":" + minute
            console.log(dateString);
            $('#modal-income-create-date').val(dateString);

        });

        $('#modal-create-save-changes').click(function () {
            var employer = $('#modal-income-create-employer').val();
            var amount = $('#modal-income-create-amount').val();
            var date = new Date($('#modal-income-create-date').val());

            var income = {
                employer: employer,
                amount: amount,
                dateReceived: date.toISOString()
            };

            console.log(income);
            $.post("/create-income-ajax", income, function (result) {
                    if (result.isSuccessStatusCode) {
                        $('#income-create-modal').modal('hide');
                        location.reload();
                    }
                    else {
                        displayError("Could not create Income " + id + " because an error occured ( " + result.reasonPhrase + " )");
                    }
                });
            });


        function openEditIncomeModal(id, amount, date, employer) {
            $('#modal-income-edit-id').val(id);
            $('#modal-income-edit-amount').val(amount);
            $('#modal-income-edit-employer').val(employer);
            console.log(date);
            $('#modal-income-edit-date').val(date);

            $('#income-edit-modal').modal('show');

        }

        function deleteIncome(id) {
            $.post("/delete-income-ajax?id=" + id, function (result) {
                console.log(result);
                if (result.isSuccessStatusCode) {
                    $("#income-" + id).remove();
                }
                else {
                    displayError("Could not delete Income " + id + " because an error occured ( " + result.reasonPhrase + " )");
                }
            });
        }

        function displayError(message) {
            $('#income-error-message-field').innerHTML = message;
            $('#income-error-message-field').text(message);
            $('#income-error-message-field').show();
        }

    </script>
}
